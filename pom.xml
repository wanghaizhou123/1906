<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.mr</groupId>
    <artifactId>demopoi</artifactId>
    <version>1.0-SNAPSHOT</version>

    <!--声明springboot版本-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.0.RELEASE</version>
    </parent>

    <!--maven配置信息-->
    <properties>
        <!--项目构建编码-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!--指定maven通过jdk1.8编译-->
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
        <!--java版本-->
        <java.version>1.8</java.version>
        <!--数据库连接池版本-->
        <alibaba.druid.version>1.1.10</alibaba.druid.version>
        <!--开发文档API版本-->
        <springfox-swagger2.version>2.9.2</springfox-swagger2.version>
        <!--mybatis和boot整合版本-->
        <mybatis.boot.version>1.3.2</mybatis.boot.version>
        <easypoi.version>4.1.3</easypoi.version>
    </properties>

    <dependencies>
        <!--引入boot的web组件[内置tomcat]-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!--boot测试工具-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope><!--测试阶段使用-->
        </dependency>

        <!--mysql数据库连接-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.37</version>
            <!--mysql低版本需要加此项配置-->
            <scope>runtime</scope><!--项目运行阶段使用-->
        </dependency>

        <!--alibaba提供的数据库连接池-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>1.1.10</version>
        </dependency>

        <!--springboot整合mybatis-->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>${mybatis.boot.version}</version>
        </dependency>


        <!--springboot整合easypoi-->
        <dependency>
            <groupId>cn.afterturn</groupId>
            <artifactId>easypoi-base</artifactId>
            <version>${easypoi.version}</version>
            <!--easypoi里面包含guava的依赖，
            swagger里面也有guava的依赖所以我们需要去掉其中的一个guava，
            如果项目中没有swagger的话可以将下方的代码去掉-->
            <exclusions>
                <exclusion>
                    <groupId>com.google.guava</groupId>
                    <artifactId>guava</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--easypoi应用于web版本-->
        <dependency>
            <groupId>cn.afterturn</groupId>
            <artifactId>easypoi-web</artifactId>
            <version>${easypoi.version}</version>
        </dependency>

        <!--启用easypoi注解-->
        <dependency>
            <groupId>cn.afterturn</groupId>
            <artifactId>easypoi-annotation</artifactId>
            <version>${easypoi.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <!--此插件可以将项目打成一个jar包-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>